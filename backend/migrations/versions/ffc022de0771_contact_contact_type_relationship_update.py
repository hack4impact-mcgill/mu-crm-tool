"""contact contact-type relationship update

Revision ID: ffc022de0771
Revises: 792b6aec7ea0
Create Date: 2021-04-10 19:28:49.895956

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ffc022de0771"
down_revision = "792b6aec7ea0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "contacts",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("email", sa.String(length=256), nullable=False),
        sa.Column("secondary_email", sa.String(length=256), nullable=True),
        sa.Column("cellphone", sa.String(length=256), nullable=False),
        sa.Column("role", sa.String(length=256), nullable=True),
        sa.Column("organization", sa.String(length=256), nullable=False),
        sa.Column("neighbourhood", sa.String(length=256), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "belongs_to",
        sa.Column("contact_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("contact_type_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["contact_type_id"],
            ["contact_types.id"],
        ),
        sa.PrimaryKeyConstraint("contact_id", "contact_type_id"),
    )
    op.drop_constraint("association_contact_id_fkey", "association", type_="foreignkey")
    op.drop_table("contact")
    op.create_foreign_key(None, "association", "contacts", ["contact_id"], ["id"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "association", type_="foreignkey")
    op.create_foreign_key(
        "association_contact_id_fkey", "association", "contact", ["contact_id"], ["id"]
    )
    op.create_table(
        "contact",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=256), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=256), autoincrement=False, nullable=False),
        sa.Column(
            "secondary_email",
            sa.VARCHAR(length=256),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "cellphone", sa.VARCHAR(length=256), autoincrement=False, nullable=False
        ),
        sa.Column("role", sa.VARCHAR(length=256), autoincrement=False, nullable=True),
        sa.Column(
            "organization", sa.VARCHAR(length=256), autoincrement=False, nullable=False
        ),
        sa.Column(
            "neighbourhood", sa.VARCHAR(length=256), autoincrement=False, nullable=True
        ),
        sa.Column(
            "contact_type", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["contact_type"], ["contact_types.id"], name="contact_contact_type_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="contact_pkey"),
    )
    op.drop_table("belongs_to")
    op.drop_table("contacts")
    # ### end Alembic commands ###
